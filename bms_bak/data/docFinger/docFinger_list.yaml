- epic: 规则管理   # 一级模块
  feature: 基础规则-文件指纹  # 二级模块
  story: 文档指纹库列表查询接口    # 接口名称
  # 接口基本信息
  case_info:
    # 基础URL:https://192.168.148.174:31000
    base_url: ${config(host)}
    # 请求信息
    request:
      # 请求类型
      method: POST
      # 请求地址
      address: /api/dlpparam/v1/docFinger/selectFingerPrintLibList
      # 请求头
      headers:
        Content-Type: application/x-www-form-urlencoded
        token: ${extract(token)}
        Referer: ${config(host)}/sub-app-dlpparam/dlpFileFingerPrint
  # 用例信息，可包含多个用例，用例id需唯一
  case_data:
    # 用例id
    docFinger_list_01:
      # 用例名称
      name: 文档指纹库列表查询-无筛选条件
      # 用例描述
      description: 文档指纹库列表查询-无筛选条件
      # 请求信息，包括data，file
      request:
        data:
          fingerPrintType: "1"
          page: "1"
          rows: "20"
      # 校验
      validate:
        # 状态码校验
        code: 200
        # 返回值校验
        response: {"statusCode": 0}
    # 用例id
    docFinger_list_02:
      # 用例名称
      name: 文档指纹库列表查询-根据指纹库名称模糊筛选
      # 用例描述
      description: 文档指纹库列表查询-根据指纹库名称模糊筛选
      # 请求信息，包括data，file
      request:
        data:
          fingerPrintType: "1"
          page: "1"
          rows: "20"
          dlpName: "自动化测试"
      # 校验
      validate:
        # 状态码校验
        code: 200
        # 返回值校验
        response: { "statusCode": 0 }
        # jsonpath校验
        jsonpath:
          - path: $.data.resultList[0].fingerPrintName
            value: 自动化测试
            type: in
    # 用例id
    docFinger_list_03:
      # 用例名称
      name: 文档指纹库列表查询-根据指纹计算状态筛选
      # 用例描述
      description: 文档指纹库列表查询-根据指纹计算状态筛选
      # 请求信息，包括data，file
      request:
        data:
          fingerPrintType: "1"
          page: "1"
          rows: "20"
          fingerCalcStatus: "2"
      # 校验
      validate:
        # 状态码校验
        code: 200
        # 返回值校验
        response: { "statusCode": 0}
    # 用例id
    docFinger_list_04:
      # 用例名称
      name: 文档指纹库列表查询-根据使用状态筛选
      # 用例描述
      description: 文档指纹库列表查询-根据使用状态筛选
      # 请求信息，包括data，file
      request:
        data:
          fingerPrintType: "1"
          page: "1"
          rows: "20"
          useStatus: "1"
      # 校验
      validate:
        # 状态码校验
        code: 200
        # 返回值校验
        response: { "statusCode": 0 }
