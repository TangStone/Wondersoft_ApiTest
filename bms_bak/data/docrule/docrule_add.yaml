- epic: 规则管理   # 一级模块
  feature: 基础规则-关键字/正则  # 二级模块
  story: 文档规则新增接口    # 接口名称
  # 接口基本信息
  case_info:
    # 基础URL:https://192.168.148.174:31000
    base_url: ${config(host)}
    # 请求信息
    request:
      # 请求类型
      method: POST
      # 请求地址
      address: /api/dlpparam/v1/dlpDocRule/insertDlpDocRules
      # 请求头
      headers:
        Content-Type: application/x-www-form-urlencoded
        token: ${extract(token)}
        Referer: ${config(host)}/sub-app-dlpparam/dlpFileDocRule
  # 用例信息，可包含多个用例，用例id需唯一
  case_data:
    # 用例id
    docrule_add_01:
      # 用例名称
      name: 新增关键字规则
      # 用例描述
      description: 输入正确的关键字规则配置，新增关键字规则
      # 请求信息，包括data，file
      request:
        data:
          c_rule_type: "1"
          c_rule_name: 自动化测试关键字规则
          c_rule_content: 自动化测试,关键字
          c_creater: ${extract(userId)}
          c_note: 自动化测试关键字规则备注
          c_reverse_key: "1"
          c_reverse_content: '{"keyList":"手工测试","threshold":"1","countType":1}'
          c_traditional_match: "1"
      # 校验
      validate:
        # 状态码校验
        code: 200
        # 返回值校验
        response: {"statusCode": 0}
    # 用例id
    docrule_add_02:
      # 用例名称
      name: 新增正则规则
      # 用例描述
      description: 输入正确的正则规则配置，新增正则规则
      # 请求信息，包括data，file
      request:
        data:
          c_rule_type: '2'
          c_rule_name: 自动化测试正则规则
          c_rule_content: (?<!(手|工))测试
          c_creater: ${extract(userId)}
          c_note: 不匹配自动化测试文本
      # 校验
      validate:
        # 状态码校验
        code: 200
        # 返回值校验
        response: { "statusCode": 0 }
    # 用例id
    docrule_add_03:
      # 用例名称
      name: 新增模糊关键字规则
      # 用例描述
      description: 输入正确的模糊关键字配置，新增模糊关键字规则
      # 请求信息，包括data，file
      request:
        data:
          c_rule_type: '3'
          c_rule_name: 自动化测试模糊关键字规则
          c_fuzzy_content: 自动化测试
          c_character_space: '1'
          c_creater: ${extract(userId)}
          c_note: 模糊匹配自动化测试文本
          c_traditional_match: "1"
      # 校验
      validate:
        # 状态码校验
        code: 200
        # 返回值校验
        response: { "statusCode": 0 }