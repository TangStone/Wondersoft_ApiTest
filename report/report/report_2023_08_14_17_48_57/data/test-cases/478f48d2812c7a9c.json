{"uid":"478f48d2812c7a9c","name":"系统配置修改-修改账号锁定时间-修改值为非数字格式","fullName":"testcases.test_cases.TestUserSync#test_businesscases","historyId":"a6385c0d2d74b49d773d2ee4b32e8792","time":{"start":1692006411285,"stop":1692006411662,"duration":377},"description":"系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败","descriptionHtml":"<p>系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_cases.TestUserSync object at 0x000001E30553CFA0>\ncase = 'updateInfoByPropKey_fail'\ncasedata = {'description': '系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败', 'epic': '系统管理', 'feature': '参数管理', 'name': '系统配置修改-修改账号锁定时间-修改值为非数字格式', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:133: in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\ncommon\\runcase.py:153: in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'statusCode': -1}, real_res = {'statusCode': 0}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"login_init","time":{"start":1692006343018,"stop":1692006343128,"duration":110},"status":"passed","steps":[{"name":"发送请求","time":{"start":1692006343045,"stop":1692006343121,"duration":76},"status":"passed","steps":[],"attachments":[{"uid":"5b7e58e1602d3938","name":"请求方法：","source":"5b7e58e1602d3938.attach","type":"text/plain","size":4},{"uid":"d681b9f149096301","name":"请求地址","source":"d681b9f149096301.attach","type":"text/plain","size":52},{"uid":"91f7749b11aa354d","name":"请求头","source":"91f7749b11aa354d.attach","type":"text/plain","size":109},{"uid":"9fea7040c4a5140f","name":"请求参数","source":"9fea7040c4a5140f.attach","type":"text/plain","size":225},{"uid":"c7239e209c39283","name":"请求结果","source":"c7239e209c39283.attach","type":"text/plain","size":2593}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":5,"shouldDisplayMessage":false},{"name":"结果校验","time":{"start":1692006343121,"stop":1692006343126,"duration":5},"status":"passed","steps":[{"name":"状态码校验","time":{"start":1692006343121,"stop":1692006343122,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"3ae1b21161076da","name":"期望状态码","source":"3ae1b21161076da.attach","type":"text/plain","size":3},{"uid":"852b14422592ea44","name":"实际状态码","source":"852b14422592ea44.attach","type":"text/plain","size":3}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"返回值校验","time":{"start":1692006343122,"stop":1692006343126,"duration":4},"status":"passed","steps":[],"attachments":[{"uid":"4931028765ced41d","name":"期望返回值","source":"4931028765ced41d.attach","type":"text/plain","size":66},{"uid":"defa0d6ac4e70c72","name":"实际返回值","source":"defa0d6ac4e70c72.attach","type":"text/plain","size":2593}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"attachmentsCount":4,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"attachmentsCount":9,"shouldDisplayMessage":false}],"testStage":{"description":"系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_cases.TestUserSync object at 0x000001E30553CFA0>\ncase = 'updateInfoByPropKey_fail'\ncasedata = {'description': '系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败', 'epic': '系统管理', 'feature': '参数管理', 'name': '系统配置修改-修改账号锁定时间-修改值为非数字格式', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:133: in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\ncommon\\runcase.py:153: in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'statusCode': -1}, real_res = {'statusCode': 0}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError","steps":[{"name":"系统配置查询","time":{"start":1692006411299,"stop":1692006411531,"duration":232},"status":"passed","steps":[{"name":"发送请求","time":{"start":1692006411304,"stop":1692006411475,"duration":171},"status":"passed","steps":[],"attachments":[{"uid":"a625198d425b37b2","name":"请求方法：","source":"a625198d425b37b2.attach","type":"text/plain","size":3},{"uid":"d05847548059fe74","name":"请求地址","source":"d05847548059fe74.attach","type":"text/plain","size":66},{"uid":"387785a52320bf6d","name":"请求头","source":"387785a52320bf6d.attach","type":"text/plain","size":471},{"uid":"d480631997187206","name":"请求结果","source":"d480631997187206.attach","type":"text/plain","size":106240}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":4,"shouldDisplayMessage":false},{"name":"结果校验","time":{"start":1692006411475,"stop":1692006411527,"duration":52},"status":"passed","steps":[{"name":"状态码校验","time":{"start":1692006411475,"stop":1692006411477,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"e1dc796e528bc1e6","name":"期望状态码","source":"e1dc796e528bc1e6.attach","type":"text/plain","size":3},{"uid":"c9c75718e93e2325","name":"实际状态码","source":"c9c75718e93e2325.attach","type":"text/plain","size":3}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"返回值校验","time":{"start":1692006411477,"stop":1692006411527,"duration":50},"status":"passed","steps":[],"attachments":[{"uid":"f09ea658c0f1324f","name":"期望返回值","source":"f09ea658c0f1324f.attach","type":"text/plain","size":68},{"uid":"53980ecf93d85950","name":"实际返回值","source":"53980ecf93d85950.attach","type":"text/plain","size":106240}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"attachmentsCount":4,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"attachmentsCount":8,"shouldDisplayMessage":false},{"name":"系统配置修改-修改账号锁定时间-修改值为非数字格式","time":{"start":1692006411541,"stop":1692006411662,"duration":121},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 59, in excute_case\n    self.excute_apicase(api, api_casedata)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 133, in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 153, in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n","steps":[{"name":"发送请求","time":{"start":1692006411545,"stop":1692006411660,"duration":115},"status":"passed","steps":[],"attachments":[{"uid":"5a6b93f626368997","name":"请求方法：","source":"5a6b93f626368997.attach","type":"text/plain","size":4},{"uid":"c7ef64956c03e04e","name":"请求地址","source":"c7ef64956c03e04e.attach","type":"text/plain","size":70},{"uid":"5d5fb1883939814c","name":"请求头","source":"5d5fb1883939814c.attach","type":"text/plain","size":488},{"uid":"27d51e09c06c2561","name":"请求参数","source":"27d51e09c06c2561.attach","type":"text/plain","size":66},{"uid":"bca68954669a3187","name":"请求结果","source":"bca68954669a3187.attach","type":"text/plain","size":17}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":5,"shouldDisplayMessage":false},{"name":"结果校验","time":{"start":1692006411660,"stop":1692006411662,"duration":2},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n","steps":[{"name":"状态码校验","time":{"start":1692006411660,"stop":1692006411661,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"1414a8ff4b708e43","name":"期望状态码","source":"1414a8ff4b708e43.attach","type":"text/plain","size":3},{"uid":"25be58dfc699c2cc","name":"实际状态码","source":"25be58dfc699c2cc.attach","type":"text/plain","size":3}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"返回值校验","time":{"start":1692006411661,"stop":1692006411661,"duration":0},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n","steps":[],"attachments":[{"uid":"edf935d00fef3906","name":"期望返回值","source":"edf935d00fef3906.attach","type":"text/plain","size":18},{"uid":"f13d0c3c2a108a3f","name":"实际返回值","source":"f13d0c3c2a108a3f.attach","type":"text/plain","size":17}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"attachmentsCount":4,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"attachmentsCount":9,"shouldDisplayMessage":false}],"attachments":[{"uid":"15f4a402efce9981","name":"log","source":"15f4a402efce9981.txt","type":"text/plain","size":869953}],"parameters":[],"stepsCount":10,"hasContent":true,"attachmentsCount":18,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"系统管理"},{"name":"feature","value":"参数管理"},{"name":"story","value":"系统参数管理"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_cases"},{"name":"subSuite","value":"TestUserSync"},{"name":"host","value":"OFYI7JX9DURTDV6"},{"name":"thread","value":"10488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_cases"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fd00560f7e3237c7","status":"failed","statusDetails":"AssertionError","time":{"start":1692006405914,"stop":1692006406247,"duration":333}},{"uid":"4bf3a640a5e7cfc4","status":"failed","statusDetails":"AssertionError","time":{"start":1692006400453,"stop":1692006400852,"duration":399}},{"uid":"4fb1f4c5e9b43972","status":"failed","statusDetails":"AssertionError","time":{"start":1692006394859,"stop":1692006395190,"duration":331}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"478f48d2812c7a9c.json","parameterValues":[]}