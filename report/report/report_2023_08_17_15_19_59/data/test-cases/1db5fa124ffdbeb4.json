{"uid":"1db5fa124ffdbeb4","name":"系统配置修改-修改账号锁定时间-修改值为非数字格式","fullName":"testcases.test_cases.TestUserSync#test_businesscases","historyId":"a6385c0d2d74b49d773d2ee4b32e8792","time":{"start":1692256690660,"stop":1692256690995,"duration":335},"description":"系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败","descriptionHtml":"<p>系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_cases.TestUserSync object at 0x0000014AE645DD00>\ncase = 'updateInfoByPropKey_fail'\ncasedata = {'description': '系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败', 'epic': '系统管理', 'feature': '参数管理', 'name': '系统配置修改-修改账号锁定时间-修改值为非数字格式', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:133: in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\ncommon\\runcase.py:154: in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'statusCode': -1}, real_res = {'statusCode': 0}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"login_init","time":{"start":1692256615163,"stop":1692256615674,"duration":511},"status":"passed","steps":[{"name":"发送请求","time":{"start":1692256615281,"stop":1692256615668,"duration":387},"status":"passed","steps":[],"attachments":[{"uid":"a3ec843e2fa6c53","name":"请求方法：","source":"a3ec843e2fa6c53.attach","type":"text/plain","size":4},{"uid":"244290201384b139","name":"请求地址","source":"244290201384b139.attach","type":"text/plain","size":52},{"uid":"6f239833d85907a6","name":"请求头","source":"6f239833d85907a6.attach","type":"text/plain","size":109},{"uid":"23f280feaa8f44e2","name":"请求参数","source":"23f280feaa8f44e2.attach","type":"text/plain","size":225},{"uid":"7012531b4231eaf","name":"请求结果","source":"7012531b4231eaf.attach","type":"text/plain","size":2569}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":5},{"name":"结果校验","time":{"start":1692256615668,"stop":1692256615672,"duration":4},"status":"passed","steps":[{"name":"状态码校验","time":{"start":1692256615668,"stop":1692256615669,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"464fc8bf42bd5fc4","name":"期望状态码","source":"464fc8bf42bd5fc4.attach","type":"text/plain","size":3},{"uid":"63995bd1b9e97b3c","name":"实际状态码","source":"63995bd1b9e97b3c.attach","type":"text/plain","size":3}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":2},{"name":"返回值校验","time":{"start":1692256615669,"stop":1692256615672,"duration":3},"status":"passed","steps":[],"attachments":[{"uid":"6c46006f7b911cae","name":"期望返回值","source":"6c46006f7b911cae.attach","type":"text/plain","size":66},{"uid":"7c6fcdcc11d54a91","name":"实际返回值","source":"7c6fcdcc11d54a91.attach","type":"text/plain","size":2569}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":2}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":4}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":9}],"testStage":{"description":"系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_cases.TestUserSync object at 0x0000014AE645DD00>\ncase = 'updateInfoByPropKey_fail'\ncasedata = {'description': '系统配置修改-修改账号锁定时间-修改值为非数字格式-修改失败', 'epic': '系统管理', 'feature': '参数管理', 'name': '系统配置修改-修改账号锁定时间-修改值为非数字格式', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:133: in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\ncommon\\runcase.py:154: in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'statusCode': -1}, real_res = {'statusCode': 0}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError","steps":[{"name":"系统配置查询","time":{"start":1692256690677,"stop":1692256690888,"duration":211},"status":"passed","steps":[{"name":"发送请求","time":{"start":1692256690683,"stop":1692256690851,"duration":168},"status":"passed","steps":[],"attachments":[{"uid":"500ca1a9e0d3f5e5","name":"请求方法：","source":"500ca1a9e0d3f5e5.attach","type":"text/plain","size":3},{"uid":"99cdedb02f909edf","name":"请求地址","source":"99cdedb02f909edf.attach","type":"text/plain","size":66},{"uid":"e3aa5ea38a4962d3","name":"请求头","source":"e3aa5ea38a4962d3.attach","type":"text/plain","size":471},{"uid":"2c1aa0ada0d0d2d4","name":"请求结果","source":"2c1aa0ada0d0d2d4.attach","type":"text/plain","size":106240}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":4},{"name":"结果校验","time":{"start":1692256690851,"stop":1692256690885,"duration":34},"status":"passed","steps":[{"name":"状态码校验","time":{"start":1692256690851,"stop":1692256690854,"duration":3},"status":"passed","steps":[],"attachments":[{"uid":"b083082c66ee1b46","name":"期望状态码","source":"b083082c66ee1b46.attach","type":"text/plain","size":3},{"uid":"c56f10f8829509df","name":"实际状态码","source":"c56f10f8829509df.attach","type":"text/plain","size":3}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":2},{"name":"返回值校验","time":{"start":1692256690854,"stop":1692256690885,"duration":31},"status":"passed","steps":[],"attachments":[{"uid":"d487bb6f6a99b8d5","name":"期望返回值","source":"d487bb6f6a99b8d5.attach","type":"text/plain","size":68},{"uid":"4ae1de6f5c23319d","name":"实际返回值","source":"4ae1de6f5c23319d.attach","type":"text/plain","size":106240}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":2}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":4}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":8},{"name":"系统配置修改-修改账号锁定时间-修改值为非数字格式","time":{"start":1692256690897,"stop":1692256690994,"duration":97},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 59, in excute_case\n    self.excute_apicase(api, api_casedata)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 133, in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 154, in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n","steps":[{"name":"发送请求","time":{"start":1692256690902,"stop":1692256690991,"duration":89},"status":"passed","steps":[],"attachments":[{"uid":"da04b08eaf73158b","name":"请求方法：","source":"da04b08eaf73158b.attach","type":"text/plain","size":4},{"uid":"5d1a174e266a4394","name":"请求地址","source":"5d1a174e266a4394.attach","type":"text/plain","size":70},{"uid":"aa6fd22e49564871","name":"请求头","source":"aa6fd22e49564871.attach","type":"text/plain","size":488},{"uid":"3d925218372590ad","name":"请求参数","source":"3d925218372590ad.attach","type":"text/plain","size":66},{"uid":"a8e0c3a334ef3d91","name":"请求结果","source":"a8e0c3a334ef3d91.attach","type":"text/plain","size":17}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":5},{"name":"结果校验","time":{"start":1692256690992,"stop":1692256690994,"duration":2},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n","steps":[{"name":"状态码校验","time":{"start":1692256690992,"stop":1692256690993,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"ca19eedd07164ee6","name":"期望状态码","source":"ca19eedd07164ee6.attach","type":"text/plain","size":3},{"uid":"5b22d74bb923ce60","name":"实际状态码","source":"5b22d74bb923ce60.attach","type":"text/plain","size":3}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":2},{"name":"返回值校验","time":{"start":1692256690993,"stop":1692256690993,"duration":0},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n","steps":[],"attachments":[{"uid":"739d395134ada3c8","name":"期望返回值","source":"739d395134ada3c8.attach","type":"text/plain","size":18},{"uid":"8f15172e8d8e238","name":"实际返回值","source":"8f15172e8d8e238.attach","type":"text/plain","size":17}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":4}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":9}],"attachments":[{"uid":"bfd4c1d295a18f7d","name":"log","source":"bfd4c1d295a18f7d.txt","type":"text/plain","size":869953}],"parameters":[],"stepsCount":10,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":18},"afterStages":[],"labels":[{"name":"epic","value":"系统管理"},{"name":"feature","value":"参数管理"},{"name":"story","value":"系统参数管理"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_cases"},{"name":"subSuite","value":"TestUserSync"},{"name":"host","value":"OFYI7JX9DURTDV6"},{"name":"thread","value":"18048-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_cases"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8e5bd1482110d042","status":"failed","statusDetails":"AssertionError","time":{"start":1692256685317,"stop":1692256685620,"duration":303}},{"uid":"4605af6104b4a86d","status":"failed","statusDetails":"AssertionError","time":{"start":1692256679982,"stop":1692256680275,"duration":293}},{"uid":"209e24dbcff6df74","status":"failed","statusDetails":"AssertionError","time":{"start":1692256674295,"stop":1692256674663,"duration":368}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1db5fa124ffdbeb4.json","parameterValues":[]}