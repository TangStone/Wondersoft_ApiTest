{"name": "测试数据源配置", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.TestUserSync object at 0x000001E30557D190>\ncase = 'config_test'\ncasedata = {'description': '测试数据源配置', 'epic': '用户管理', 'feature': '用户同步管理', 'name': '测试数据源配置', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:133: in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\ncommon\\runcase.py:153: in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'msg': 'success', 'statusCode': 0}\nreal_res = {'msg': '没有连接权限,账号或密码不正确！', 'statusCode': 1114402}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError"}, "description": "测试数据源配置", "steps": [{"name": "测试LADP数据源配置成功", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 59, in excute_case\n    self.excute_apicase(api, api_casedata)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 133, in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 153, in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求方法：", "source": "16503b4c-b77d-4970-aac3-9c00c8722450-attachment.attach"}, {"name": "请求地址", "source": "fce7bfb0-40bd-4dd7-aed3-889df460aa55-attachment.attach"}, {"name": "请求头", "source": "338385cc-06c6-43d9-8abe-f95239e546b8-attachment.attach"}, {"name": "请求参数", "source": "b3b88434-2406-47b7-b279-a9873e60912f-attachment.attach"}, {"name": "请求结果", "source": "92d86ffc-5dba-473b-95f1-b8fe61f2429b-attachment.attach"}], "start": 1692006492616, "stop": 1692006492805}, {"name": "结果校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "状态码校验", "status": "passed", "attachments": [{"name": "期望状态码", "source": "edb70785-418c-45fe-96c2-d3523ed3cf0b-attachment.attach"}, {"name": "实际状态码", "source": "3c64456b-c242-4670-810d-e85b19dbbd0b-attachment.attach"}], "start": 1692006492805, "stop": 1692006492807}, {"name": "返回值校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "attachments": [{"name": "期望返回值", "source": "2434bcca-3376-47e2-8cca-85c969e12e22-attachment.attach"}, {"name": "实际返回值", "source": "23103e79-6d35-4a65-95d9-4b1e3ef229d7-attachment.attach"}], "start": 1692006492807, "stop": 1692006492808}], "start": 1692006492805, "stop": 1692006492809}], "start": 1692006492613, "stop": 1692006492809}], "attachments": [{"name": "log", "source": "119cf0fd-4286-4dc8-919b-b347383df844-attachment.txt", "type": "text/plain"}], "start": 1692006492604, "stop": 1692006492809, "uuid": "dd007bc1-08e1-4948-883d-10a54ac81449", "historyId": "f25bd64294e77074dd8fcf15a47c34e2", "testCaseId": "2cc05bdd47264d0a6d036e2b95402968", "fullName": "testcases.test_cases.TestUserSync#test_businesscases", "labels": [{"name": "epic", "value": "用户管理"}, {"name": "feature", "value": "用户同步管理"}, {"name": "story", "value": "用户同步"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_cases"}, {"name": "subSuite", "value": "TestUserSync"}, {"name": "host", "value": "OFYI7JX9DURTDV6"}, {"name": "thread", "value": "10488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_cases"}]}