{"name": "系统配置修改-参数不存在", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.TestUserSync object at 0x000001D680AFD670>\ncase = 'updateInfoByPropKey_PropKey_absent'\ncasedata = {'description': '系统配置修改-参数不存在', 'epic': '系统管理', 'feature': '参数管理', 'name': '系统配置修改-参数不存在', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:90: in excute_apicase\n    checkresult.check_result(hope_result, recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'statusCode': -1}, real_res = {'statusCode': 0}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError"}, "description": "系统配置修改-参数不存在", "steps": [{"name": "系统配置修改-参数不存在", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 59, in excute_case\n    self.excute_apicase(api, api_casedata)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 90, in excute_apicase\n    checkresult.check_result(hope_result, recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求方法：", "source": "28c91a5b-84e7-4378-ad84-a75e3ff1e4ab-attachment.attach"}, {"name": "请求地址", "source": "4abac439-577f-4748-9e81-681cdc6763e0-attachment.attach"}, {"name": "请求头", "source": "140a1763-fde5-4d7f-9ce8-14428a312271-attachment.attach"}, {"name": "请求参数", "source": "a897c359-f8cc-47c6-aab6-79fcdaf2aca0-attachment.attach"}, {"name": "请求结果", "source": "8da4cdbf-5a23-4e77-a2e0-2ead175aec4c-attachment.attach"}], "start": 1691389890897, "stop": 1691389891014}, {"name": "结果校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "状态码校验", "status": "passed", "attachments": [{"name": "期望状态码", "source": "607a5c9e-ce5e-4b09-84b1-99d35c61da99-attachment.attach"}, {"name": "实际状态码", "source": "08aa0692-f8a9-42fd-804a-9fcaab2173a3-attachment.attach"}], "start": 1691389891014, "stop": 1691389891015}, {"name": "返回值校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "attachments": [{"name": "期望返回值", "source": "334998a7-224e-4afb-9ac8-e42e40aea647-attachment.attach"}, {"name": "实际返回值", "source": "1dcfe8d2-fe00-40b8-920e-d72e9d1ed5e4-attachment.attach"}], "start": 1691389891015, "stop": 1691389891016}], "start": 1691389891014, "stop": 1691389891016}], "start": 1691389890894, "stop": 1691389891017}], "attachments": [{"name": "log", "source": "6d36332b-51c3-45c8-bb2d-d00ee1e09db2-attachment.txt", "type": "text/plain"}], "start": 1691389890877, "stop": 1691389891017, "uuid": "2a7745b7-7887-4f4e-bdc0-cc060fa574a8", "historyId": "27f11ef736a6251d66124363209a7cf2", "testCaseId": "2cc05bdd47264d0a6d036e2b95402968", "fullName": "testcases.test_cases.TestUserSync#test_businesscases", "labels": [{"name": "epic", "value": "系统管理"}, {"name": "feature", "value": "参数管理"}, {"name": "story", "value": "系统参数管理"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_cases"}, {"name": "subSuite", "value": "TestUserSync"}, {"name": "host", "value": "OFYI7JX9DURTDV6"}, {"name": "thread", "value": "20992-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_cases"}]}