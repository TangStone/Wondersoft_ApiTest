{"name": "测试数据源配置", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.TestUserSync object at 0x000001E30557D190>\ncase = 'config_test'\ncasedata = {'description': '测试数据源配置', 'epic': '用户管理', 'feature': '用户同步管理', 'name': '测试数据源配置', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:133: in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\ncommon\\runcase.py:153: in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'msg': 'success', 'statusCode': 0}\nreal_res = {'msg': '没有连接权限,账号或密码不正确！', 'statusCode': 1114402}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError"}, "description": "测试数据源配置", "steps": [{"name": "测试LADP数据源配置成功", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 59, in excute_case\n    self.excute_apicase(api, api_casedata)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 133, in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 153, in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求方法：", "source": "b910ce15-3155-4058-922c-d9d9b3a751ce-attachment.attach"}, {"name": "请求地址", "source": "946c6ece-ccf7-49a2-998e-9bc17ac9b15e-attachment.attach"}, {"name": "请求头", "source": "0a490008-4b6e-46ff-817e-43a5bcbd79ed-attachment.attach"}, {"name": "请求参数", "source": "de09b0ac-a21b-48b3-b5f1-566000f14861-attachment.attach"}, {"name": "请求结果", "source": "09f9b3d7-8a3f-4283-af1e-3fce1f248323-attachment.attach"}], "start": 1692006482264, "stop": 1692006482384}, {"name": "结果校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "状态码校验", "status": "passed", "attachments": [{"name": "期望状态码", "source": "87531131-4af3-4049-8314-acce6b208f24-attachment.attach"}, {"name": "实际状态码", "source": "86761262-b37f-4917-8e06-ad15a775319d-attachment.attach"}], "start": 1692006482384, "stop": 1692006482385}, {"name": "返回值校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "attachments": [{"name": "期望返回值", "source": "a05143f1-3b71-4370-9c88-f5ec9085309c-attachment.attach"}, {"name": "实际返回值", "source": "0374e895-ed98-40d6-a8fd-16570817f355-attachment.attach"}], "start": 1692006482385, "stop": 1692006482386}], "start": 1692006482384, "stop": 1692006482387}], "start": 1692006482262, "stop": 1692006482387}], "attachments": [{"name": "log", "source": "e4ab761b-dae3-4d04-96eb-742a5c055562-attachment.txt", "type": "text/plain"}], "start": 1692006482217, "stop": 1692006482387, "uuid": "6d692315-ebef-41d0-bd6b-6519a52a8ef6", "historyId": "f25bd64294e77074dd8fcf15a47c34e2", "testCaseId": "2cc05bdd47264d0a6d036e2b95402968", "fullName": "testcases.test_cases.TestUserSync#test_businesscases", "labels": [{"name": "epic", "value": "用户管理"}, {"name": "feature", "value": "用户同步管理"}, {"name": "story", "value": "用户同步"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_cases"}, {"name": "subSuite", "value": "TestUserSync"}, {"name": "host", "value": "OFYI7JX9DURTDV6"}, {"name": "thread", "value": "10488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_cases"}]}