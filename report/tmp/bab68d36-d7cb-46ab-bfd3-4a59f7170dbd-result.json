{"name": "系统配置修改-参数不存在", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_cases.TestUserSync object at 0x0000014AE645D250>\ncase = 'updateInfoByPropKey_PropKey_absent'\ncasedata = {'description': '系统配置修改-参数不存在', 'epic': '系统管理', 'feature': '参数管理', 'name': '系统配置修改-参数不存在', ...}\n\n    @pytest.mark.parametrize('case, casedata', readcase.ReadCase().get_case(businesscase_pathlist))\n    def test_businesscases(self, case, casedata):\n        handleallure.allure_display(casedata)\n        logging.info(\"==========执行用例START：%s==========\", case)\n>       runcase.RunCase().excute_case(casedata)\n\ntestcases\\test_cases.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\runcase.py:59: in excute_case\n    self.excute_apicase(api, api_casedata)\ncommon\\runcase.py:133: in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\ncommon\\runcase.py:154: in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\ncommon\\checkresult.py:31: in check_result\n    assert_response(value, real_res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhope_res = {'statusCode': -1}, real_res = {'statusCode': 0}\n\n    def assert_response(hope_res, real_res):\n        \"\"\"\n        返回结果校验 -全返回校验\n        :param hope_res:\n        :param real_res:\n        :return:\n        \"\"\"\n        try:\n            with allure.step(\"返回值校验\"):\n                allure.attach(name=\"期望返回值\", body=str(hope_res))\n                allure.attach(name='实际返回值', body=str(real_res))\n                if isinstance(hope_res, (dict, list)) and isinstance(real_res, (dict, list)):\n                    flag = handledict.cmp_dict(hope_res, real_res)\n>                   assert flag\nE                   AssertionError\n\ncommon\\checkresult.py:84: AssertionError"}, "description": "系统配置修改-参数不存在", "steps": [{"name": "系统配置修改-参数不存在", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 59, in excute_case\n    self.excute_apicase(api, api_casedata)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 133, in excute_apicase\n    self.apicase_processors(api_casedata['postProcessors'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\runcase.py\", line 154, in apicase_processors\n    checkresult.check_result(pro_data['assert'], recv_data, recv_code)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "发送请求", "status": "passed", "attachments": [{"name": "请求方法：", "source": "cdd9b845-5233-4d20-9382-abfc1a26030c-attachment.attach"}, {"name": "请求地址", "source": "e93a6915-3612-400d-b99d-fecc3b564d19-attachment.attach"}, {"name": "请求头", "source": "513e8a93-0276-4b20-91d8-d8898d43286e-attachment.attach"}, {"name": "请求参数", "source": "130da282-814b-4d83-b55e-a4e11f121678-attachment.attach"}, {"name": "请求结果", "source": "6791b880-9ed0-45ec-bf60-f3a875cbb90f-attachment.attach"}], "start": 1692256691026, "stop": 1692256691117}, {"name": "结果校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 31, in check_result\n    assert_response(value, real_res)\n  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "steps": [{"name": "状态码校验", "status": "passed", "attachments": [{"name": "期望状态码", "source": "efa193ea-3284-42af-a66d-114cdc7fcc76-attachment.attach"}, {"name": "实际状态码", "source": "7239447f-d11e-4710-9036-d80fc6256205-attachment.attach"}], "start": 1692256691117, "stop": 1692256691118}, {"name": "返回值校验", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Wondersoft_ApiTest\\common\\checkresult.py\", line 84, in assert_response\n    assert flag\n"}, "attachments": [{"name": "期望返回值", "source": "00992f87-a0a7-49ba-b535-ce1cd1cc9fec-attachment.attach"}, {"name": "实际返回值", "source": "f7f61e82-3e8c-4055-a9a8-01ee83d7a63f-attachment.attach"}], "start": 1692256691118, "stop": 1692256691119}], "start": 1692256691117, "stop": 1692256691119}], "start": 1692256691025, "stop": 1692256691120}], "attachments": [{"name": "log", "source": "e504eefb-abdb-40d0-b9e5-85c57d3b0a31-attachment.txt", "type": "text/plain"}], "start": 1692256691018, "stop": 1692256691120, "uuid": "04f97626-b9a3-4ef6-9bf6-ab75e9e9ffe4", "historyId": "27f11ef736a6251d66124363209a7cf2", "testCaseId": "2cc05bdd47264d0a6d036e2b95402968", "fullName": "testcases.test_cases.TestUserSync#test_businesscases", "labels": [{"name": "epic", "value": "系统管理"}, {"name": "feature", "value": "参数管理"}, {"name": "story", "value": "系统参数管理"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_cases"}, {"name": "subSuite", "value": "TestUserSync"}, {"name": "host", "value": "OFYI7JX9DURTDV6"}, {"name": "thread", "value": "18048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_cases"}]}